<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop" 
xsi:schemaLocation="
http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
http://www.springframework.org/schema/tx 
http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
http://www.springframework.org/schema/aop 
http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
">
        <!-- 配置数据源，使用的是alibaba的Druid(德鲁伊)数据源 -->
    	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">  
	        <!-- 基本属性 url、user、password -->  
	        <property name="url" value="${jdbc.url}"/>  
	        <property name="username" value="${jdbc.username}"/>  
	        <property name="password" value="${jdbc.password}"/>  
	        <!-- 初始化连接大小 -->
	        <property name="initialSize" value="${ds.initialSize}"/>
	        <!-- 连接池最大空闲 -->
        	<property name="maxIdle" value="${ds.maxIdle}" />
			<!-- 连接池最小空闲 -->  
	        <property name="minIdle" value="${ds.minIdle}"/>	        
	        <!-- 连接池最大使用连接数量 -->  
	        <property name="maxActive" value="${ds.maxActive}"/>  
	        <!-- 配置获取连接等待超时的时间 -->  
	        <property name="maxWait" value="${ds.maxWait}"/>  
	  
	        <property name="validationQuery" value="SELECT 'x'"/>  
	        <property name="testWhileIdle" value="true"/>  
	        <property name="testOnBorrow" value="false"/>  
	        <property name="testOnReturn" value="false"/>  
	        
	        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->  
	        <property name="timeBetweenEvictionRunsMillis" value="${ds.timeBetweenEvictionRunsMillis}"/>  
	        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->  
	        <property name="minEvictableIdleTimeMillis" value="${ds.minEvictableIdleTimeMillis}"/>
	        
	        <!-- 打开removeAbandoned功能 -->
        	<property name="removeAbandoned" value="true" />
        	<!-- 1800秒，也就是30分钟 -->
        	<property name="removeAbandonedTimeout" value="1800" />
        	<!-- 关闭abanded连接时输出错误日志 -->
        	<property name="logAbandoned" value="true" />
        	
	        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->  
	        <property name="poolPreparedStatements" value="false"/>  
	        <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>  
	        <!-- 配置监控统计拦截的filters -->  
	        <property name="filters" value="stat"/>  
    	</bean>    
      
      <!-- ========================================分隔线========================================= -->
      <!-- ========================================针对myBatis的配置项============================== -->
	    <!-- 1.配置sqlSessionFactory-->  
	    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
	        <property name="dataSource" ref="dataSource" />  
	        <!-- 自动扫描mapping.xml文件 -->  
	        <property name="mapperLocations" value="classpath:com/csair/smybatis/mapper/*.xml"></property>  
	    </bean>  
	  
	    <!--2.扫描mapper接口-->  
	    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
	    	<!-- 扫描com.csair.smybaits.dao这个包以及它的子包下的所有映射接口类 -->
	        <property name="basePackage" value="com.csair.smybatis.dao" /> 
	        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>  
	    </bean>  
	    
	  <!-- ========================================分隔线========================================= -->
	    <!-- 配置Spring的事务管理器-->  
	    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
	        <property name="dataSource" ref="dataSource" />  
	    </bean> 
	    
	     <!-- 拦截器方式配置事物 -->
    	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
        	<tx:attributes>
	            <tx:method name="insert*" propagation="REQUIRED" />
	            <tx:method name="save*" propagation="REQUIRED" />
	            <tx:method name="update*" propagation="REQUIRED" />
	            <tx:method name="modify*" propagation="REQUIRED" />
	            <tx:method name="edit*" propagation="REQUIRED" />
	            <tx:method name="delete*" propagation="REQUIRED" />
	            <tx:method name="remove*" propagation="REQUIRED" />
	            <tx:method name="del" propagation="REQUIRED" />
	
	            <tx:method name="get*" propagation="SUPPORTS" />
	            <tx:method name="find*" propagation="SUPPORTS" />
	            <tx:method name="load*" propagation="SUPPORTS" />
	            <tx:method name="search*" propagation="SUPPORTS" />

            	<!-- <tx:method name="*" propagation="SUPPORTS" /> -->
        	</tx:attributes>
    	</tx:advice>
    <aop:config>
        <aop:pointcut id="transactionPointcut" expression="execution(* com.csair.smybatis.service.*Impl.*(..))" />
        <aop:advisor pointcut-ref="transactionPointcut" advice-ref="transactionAdvice" />
    </aop:config>


    <!-- 配置druid监控spring jdbc -->
    <bean id="druid-stat-interceptor" class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor">
    </bean>
    <bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut" scope="prototype">
        <property name="patterns">
            <list>
                <value>com.csair.smybatis.service.*</value>
            </list>
        </property>
    </bean>
    <aop:config>
        <aop:advisor advice-ref="druid-stat-interceptor" pointcut-ref="druid-stat-pointcut" />
    </aop:config>
	     
      
 </beans>  